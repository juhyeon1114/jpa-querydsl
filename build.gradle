plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // gradle 명령어에 querydsl관련된 것들 추가
}

group = 'study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" // Q파일들을 build폴더 안에 위치시키기 위함

querydsl {
	jpa = true // JPA 사용 여부
	querydslSourcesDir = querydslDir // querydsl 사용할 경로
}

sourceSets {
	main.java.srcDir querydslDir // build 시 사용할 sourceSets
}

configurations {
	querydsl.extendsFrom compileClasspath // querydsl이 compileClassPath를 상속
}

// 컴파일 시 사용할 옵션
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
